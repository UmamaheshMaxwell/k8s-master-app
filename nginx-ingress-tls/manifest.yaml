---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devopswithkube@gmail.com  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: v1
kind: Namespace
metadata:
  name: code-oss
  labels:
    app: code-oss
    environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user123-pod
  namespace: code-oss
  labels:
    app: user123-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user123-pod
  template:
    metadata:
      labels:
        app: user123-pod
    spec:
      containers:
      - name: user123-pod
        image: httpd
        imagePullPolicy: Always
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: user123-pod
  namespace: code-oss
  labels:
    app: user123-pod
spec:
  type: NodePort
  selector:
    app: user123-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-auth-deployment
  namespace: code-oss
  labels:
    app: fastapi-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-auth
  template:
    metadata:
      labels:
        app: fastapi-auth
    spec:
      containers:
      - name: fastapi-auth
        image: us-east1-docker.pkg.dev/gke-projects-443614/artifacts-python/fastapi-auth:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-auth-service
  namespace: code-oss
  labels:
    app: fastapi-auth
spec:
  type: NodePort
  selector:
    app: fastapi-auth
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-ingress
  namespace: code-oss
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/enable-access-log: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: devopswithkube.com
    http:
      paths:
      - path: /fast-api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: fastapi-auth-service
            port:
              number: 8000
  tls:
  - hosts:
    - devopswithkube.com
    secretName: devops-with-kube-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: code-oss
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/auth-url: "https://devopswithkube.com/fast-api/login/check"
    nginx.ingress.kubernetes.io/auth-signin: "https://devopswithkube.com/fast-api/auth?rd=$request_uri"
    nginx.ingress.kubernetes.io/add-headers: "Cache-Control: max-age=31536000; public"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: devopswithkube.com
    http:
      paths:
      - path: /user123-pod(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: user123-pod
            port:
              number: 80
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: user123-pod
            port:
              number: 80
  tls:
  - hosts:
    - devopswithkube.com
    secretName: devops-with-kube-tls
